#!/usr/bin/with-contenv bashio
set -e

# ==============================================================================
# Sengled Local Server - Main Service
# ==============================================================================

# Configuration paths
CONFIG_PATH=/data/options.json
MOSQUITTO_CONFIG_DIR=/data/mosquitto
CERTS_DIR=/data/certs
LOG_LEVEL=$(bashio::config 'log_level')

# Set logging level
bashio::log.level "${LOG_LEVEL}"

# Setup directories
bashio::log.info "Setting up directory structure..."
mkdir -p "${MOSQUITTO_CONFIG_DIR}" "${CERTS_DIR}" /data/config /data/devices
chown -R mosquitto:mosquitto "${MOSQUITTO_CONFIG_DIR}"

# Setup device storage directory with proper permissions
# HTTP server runs as root but needs write access for device storage
chmod 755 /data/devices

# Fix certificate permissions for mosquitto user
if [[ -d "${CERTS_DIR}" ]]; then
    chown -R mosquitto:mosquitto "${CERTS_DIR}"
    chmod 644 "${CERTS_DIR}"/*.crt 2>/dev/null || true
    chmod 600 "${CERTS_DIR}"/*.key 2>/dev/null || true
fi

# Activate virtual environment
export PATH="/opt/venv/bin:$PATH"

# Generate certificates if needed
if [[ $(bashio::config 'auto_generate_certs') == true ]]; then
    if [[ ! -f "${CERTS_DIR}/ca.crt" ]] || [[ ! -f "${CERTS_DIR}/server.crt" ]]; then
        bashio::log.info "Generating SSL certificates..."
        python3 /usr/local/src/cert_manager.py --generate --output-dir "${CERTS_DIR}" \
            --common-name "$(bashio::config 'cert_common_name')"
    else
        bashio::log.info "SSL certificates already exist, skipping generation"
    fi
fi

# Configure mosquitto
bashio::log.info "Configuring Mosquitto MQTT broker..."
python3 /usr/local/src/config_manager.py \
    --template /usr/local/mosquitto/mosquitto.conf.j2 \
    --output "${MOSQUITTO_CONFIG_DIR}/mosquitto.conf" \
    --config "${CONFIG_PATH}" \
    --certs-dir "${CERTS_DIR}"

# Start Mosquitto
bashio::log.info "Starting Mosquitto MQTT broker on port 28527..."
mosquitto -c "${MOSQUITTO_CONFIG_DIR}/mosquitto.conf" &
MOSQUITTO_PID=$!

# Wait a moment and check if mosquitto started successfully
sleep 2
if ! kill -0 "${MOSQUITTO_PID}" 2>/dev/null; then
    bashio::log.error "❌ Mosquitto failed to start! Check configuration."
    exit 1
fi
bashio::log.info "✅ Mosquitto MQTT broker started successfully"

# Start HTTP server
bashio::log.info "Starting Simple HTTP server on port 54448..."
cd /usr/local/src
LOG_LEVEL="${LOG_LEVEL}" python3 simple_http_server.py &
HTTP_PID=$!

# Wait a moment and check if HTTP server started successfully
sleep 2
if ! kill -0 "${HTTP_PID}" 2>/dev/null; then
    bashio::log.error "❌ HTTP server failed to start!"
    exit 1
fi
bashio::log.info "✅ HTTP server started successfully"

bashio::log.info "🚀 All services started successfully!"
bashio::log.info "📡 HTTP endpoints available at port 54448"
bashio::log.info "🔌 MQTT broker listening on port 28527"
bashio::log.info "🔦 Sengled Local Server ready! Light up your local network! 💡"

# Wait for services
wait